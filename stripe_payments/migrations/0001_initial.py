# Generated by Django 5.2.4 on 2025-09-09 08:51

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('accounts', '0010_alter_transcription_field_type'),
        ('bookings', '0004_sessionbooking_duration_hours_sessionbooking_gig_and_more'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='PaymentAnalytics',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField(unique=True)),
                ('total_payments_count', models.IntegerField(default=0)),
                ('total_amount_cents', models.IntegerField(default=0)),
                ('successful_payments_count', models.IntegerField(default=0)),
                ('failed_payments_count', models.IntegerField(default=0)),
                ('refund_requests_count', models.IntegerField(default=0)),
                ('refunds_processed_count', models.IntegerField(default=0)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name_plural': 'Payment Analytics',
                'ordering': ['-date'],
            },
        ),
        migrations.CreateModel(
            name='Payment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('stripe_payment_intent_id', models.CharField(max_length=255, unique=True)),
                ('stripe_charge_id', models.CharField(blank=True, max_length=255, null=True)),
                ('stripe_customer_id', models.CharField(blank=True, max_length=255, null=True)),
                ('amount_cents', models.IntegerField(help_text='Amount in cents (USD)')),
                ('hourly_rate_cents', models.IntegerField(help_text="Teacher's hourly rate in cents")),
                ('session_duration_hours', models.DecimalField(decimal_places=2, help_text='Session duration in hours', max_digits=5)),
                ('platform_fee_cents', models.IntegerField(default=0, help_text='Platform fee in cents')),
                ('status', models.CharField(choices=[('PENDING', 'Pending'), ('PROCESSING', 'Processing'), ('COMPLETED', 'Completed'), ('FAILED', 'Failed'), ('REFUND_REQUESTED', 'Refund Requested'), ('REFUNDED', 'Refunded'), ('CANCELLED', 'Cancelled')], default='PENDING', max_length=20)),
                ('payment_method_type', models.CharField(blank=True, max_length=50)),
                ('currency', models.CharField(default='USD', max_length=3)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('paid_at', models.DateTimeField(blank=True, null=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('metadata', models.JSONField(blank=True, default=dict)),
                ('gig', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='payments', to='accounts.gig')),
                ('session_booking', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='payment', to='bookings.sessionbooking')),
                ('student', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='payments_made', to=settings.AUTH_USER_MODEL)),
                ('teacher', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='payments_received', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='RefundRequest',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('reason', models.TextField(help_text="Student's reason for refund request")),
                ('requested_amount_cents', models.IntegerField(help_text='Requested refund amount in cents')),
                ('status', models.CharField(choices=[('PENDING', 'Pending Review'), ('APPROVED', 'Approved'), ('REJECTED', 'Rejected'), ('PROCESSED', 'Refund Processed')], default='PENDING', max_length=20)),
                ('admin_notes', models.TextField(blank=True, help_text="Admin's review notes")),
                ('reviewed_at', models.DateTimeField(blank=True, null=True)),
                ('stripe_refund_id', models.CharField(blank=True, max_length=255, null=True)),
                ('refunded_amount_cents', models.IntegerField(blank=True, null=True)),
                ('refunded_at', models.DateTimeField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('payment', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='refund_requests', to='stripe_payments.payment')),
                ('reviewed_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='reviewed_refunds', to=settings.AUTH_USER_MODEL)),
                ('student', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='SavedPaymentMethod',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('stripe_payment_method_id', models.CharField(max_length=255, unique=True)),
                ('stripe_customer_id', models.CharField(max_length=255)),
                ('card_brand', models.CharField(max_length=20)),
                ('card_last_four', models.CharField(max_length=4)),
                ('card_exp_month', models.IntegerField()),
                ('card_exp_year', models.IntegerField()),
                ('card_country', models.CharField(blank=True, max_length=2)),
                ('is_default', models.BooleanField(default=False)),
                ('is_active', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('student', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='saved_payment_methods', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-is_default', '-created_at'],
            },
        ),
        migrations.CreateModel(
            name='StripeCustomer',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('stripe_customer_id', models.CharField(max_length=255, unique=True)),
                ('email', models.EmailField(max_length=254)),
                ('name', models.CharField(blank=True, max_length=255)),
                ('is_active', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='stripe_customer', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.AddIndex(
            model_name='payment',
            index=models.Index(fields=['student', '-created_at'], name='stripe_paym_student_c5bdae_idx'),
        ),
        migrations.AddIndex(
            model_name='payment',
            index=models.Index(fields=['teacher', '-created_at'], name='stripe_paym_teacher_055e2b_idx'),
        ),
        migrations.AddIndex(
            model_name='payment',
            index=models.Index(fields=['status', '-created_at'], name='stripe_paym_status_be6d23_idx'),
        ),
        migrations.AddIndex(
            model_name='refundrequest',
            index=models.Index(fields=['status', '-created_at'], name='stripe_paym_status_b6c988_idx'),
        ),
        migrations.AddIndex(
            model_name='refundrequest',
            index=models.Index(fields=['student', '-created_at'], name='stripe_paym_student_e23233_idx'),
        ),
        migrations.AddIndex(
            model_name='savedpaymentmethod',
            index=models.Index(fields=['student', 'is_active'], name='stripe_paym_student_322fa2_idx'),
        ),
    ]
